#+TITLE: My Awesome Python Handbook
#+DESCRIPTION: Quick Reference for this ever-forgetting mind.

* CheatSheet

print and type checking




## Beginner
### Print and type
```python
print("Hello World")
type("Hello World") #Outputs: <class 'str'>
```

### Variables
```python
# Number
my_number = 2
# Float
my_float_number = 2.023424234

```

2. Functions
3. Classes
4. Exceptions
5. Packages/Modules
## Advanced
6. List Comprehensions
7. Decorators
8. Context Managers
9. Generators
10. Class Decorators
11. MetaClasses
## Concurrency
12. Threading
13. Multiprocessing
14. Async
15. Tulip
16. Twisted
17. Gevent
## Testing
18. Tox
19. PyTest
20. CoveragePy
## Web
21. HTTP
22. Pyramid
23. Django
24. Flask
## DB
25. Django ORM
** Lists
#+BEGIN_SRC python
  # create a list
  bikes = ['trek', 
	   'redline',
	   'giant']

  # list index structure
  """
   +---+---+---+---+---+---+
   | P | y | t | h | o | n |
   +---+---+---+---+---+---+
     0   1   2   3   4   5   
    -6  -5  -4  -3  -2  -1
  """
  # first item
  bikes[0]
  # last item
  bikes[-1]

  # looping through a list
  for bike in bikes:
      print(bike)

  # Adding items to a list
  bikes = []
  bikes.append('trek')
  bikes.append('redline')
  bikes.append('giant')

  # Making numerical Lists
  squares = []
  for x in range(1, 11):
      squares.append(x**2)

  # List Comprehensions
  squares = [x**2 for x in range(1,11)]

  # Slicing a list
  a = ['sam', 'bob', 'ada', 'bea']
  """
  a[start:end:step] # start through not past end, by step
  a[start:end]      # items start through end-1
  a[start:]         # items start through the rest of the array
  a[:end]           # items from the beginning through end-1
  a[:]              # copy of whole array
  """
  a[-1]    # last item in the array
  a[-2:]   # last two items in the array
  a[:-2]   # everything except the last two items

  a[::-1]    # all items in the array, reversed
  a[1::-1]   # the first two items, reversed
  a[:-3:-1]  # the last two items, reversed
  a[-3::-1]  # everything except the last two items, reversed
#+END_SRC

