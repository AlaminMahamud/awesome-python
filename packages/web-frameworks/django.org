#+TITLE: Django
#+BEGIN_QUOTE
The Web Framework for perfectionists with deadlines
#+END_QUOTE
*** Table of Contents
- [[#Cheatsheet][Cheatsheet]]
- [[#Quick Install][Quick Install]]
- [[#Example][Example]]
- [[#Model][Model]]
- [[#View][View]]
- [[#Template][Template]]
- [[#Forms][Forms]]
- [[#Development Process][Development Process]]
- [[#Admin][Admin]]
- [[#Security][Security]]
- [[#Internationalization & Localization][Internationalization & Localization]]
- [[#Performance & Optimization][Performance & Optimization]]
- [[#Geographic framework][Geographic framework]]
- [[#Common Web Application Tools][Common Web Application Tools]]
  - [[#Authentication][Authentication]]
  - [[#Caching][Caching]]
  - [[#Logging][Logging]]
  - [[#Sending emails][Sending emails]]
  - [[#Syndication feeds (RSS/Atom)][Syndication feeds (RSS/Atom)]]
  - [[#Pagination][Pagination]]
  - [[#Messages framework][Messages framework]]
  - [[#Serialization][Serialization]]
  - [[#Sessions][Sessions]]
  - [[#Sitemaps][Sitemaps]]
  - [[#Static files management][Static files management]]
  - [[#Data validation][Data validation]]
- [[#Other Core Functionalities][Other Core Functionalities]]
  - [[#Conditional content processing][Conditional content processing]]
  - [[#Content types and generic relations][Content types and generic relations]]
  - [[#Flatpages][Flatpages]]
  - [[#Redirects][Redirects]]
  - [[#Signals][Signals]]
  - [[#System check framework][System check framework]]
  - [[#The sites framework][The sites framework]]
  - [[#Unicode in Django][Unicode in Django]]
- [[#Misc][Misc]]

*** CheatSheet
create project
#+BEGIN_SRC shell
django-admin startproject <project_name>
#or to create project inside the same directory
django-admin startproject <project_name> . 
#+END_SRC

runserver
#+BEGIN_SRC shell
python manage.py runserver <ip>:<port>
#+END_SRC

shell
#+BEGIN_SRC shell
python manage.py shell
#+END_SRC

migrations
#+BEGIN_SRC shell
python manage.py makemigrations <app_name>
python manage.py makemigrate

# to see the generated sql
python manage.py sqlmigrate polls 0001
#+END_SRC

manage user
#+BEGIN_SRC shell
python manage.py createsuperuser
#+END_SRC
*** Quick Install
1. check python is up and running
#+BEGIN_SRC shell
python3
Python 3.6.5 (default, Apr  1 2018, 05:46:30) 
[GCC 7.3.0] on linux
Type "help", "copyright", "credits" or "license" for more information.
>>> 
#+END_SRC
2. setup db - =postgres= or =mysql= or =any other with backend support=
3. install django
#+BEGIN_SRC shell
# activate a virtualenv first.
pip install django
#+END_SRC
4. verifying
#+BEGIN_SRC python
>>> import django
>>> print(django.get_version())
2.1
#+END_SRC
*** Example
- Repository - [[https://github.com/AlaminMahamud/django-polls][django-polls]]
#+BEGIN_EXAMPLE
mysite/               ---------   => root
    manage.py         ---------   => we execute command with it
    mysite/           ---------   => main app 
        __init__.py
        settings.py   ---------   => main settings file
        urls.py       ---------   => main url
        wsgi.py
    polls/            ---------   => another app
        __init__.py
        admin.py      ---------   => admin  
        migrations/   ---------   => migrations
            __init__.py
            0001_initial.py
        models.py     ---------   => models for that app
        static/       ---------   => static data for that app
            polls/    ---------   => every data is inside a folder of app name
                images/
                    background.gif
                style.css
        templates/    ---------   => templates
            polls/
                detail.html
                index.html
                results.html
        tests.py      ----------  => tests file/folder for that app
        urls.py       ----------  => routing for that app
        views.py      ----------  => view file for that app
    templates/        ----------  => templates for root level
        admin/
            base_site.html
#+END_EXAMPLE
*** Misc
**** Automatic Reloading of =runserver=
The development server automatically reloads Python code for each request as needed. You don’t need to restart the server for code changes to take effect. However, some actions like adding files don’t trigger a restart, so you’ll have to restart the server in these cases.

**** Projects vs Apps
What’s the difference between a project and an app? An app is a Web application that does something – e.g., a Weblog system, a database of public records or a simple poll app. A project is a collection of configuration and apps for a particular website. A project can contain multiple apps. An app can be in multiple projects.

**** When to use =include()=
You should always use =include()= when you include other URL patterns. =admin.site.urls= is the only exception to this
