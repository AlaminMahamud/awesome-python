*** Generalized Compiler Architecture
[[../../images/architecture/001.jpg]]

- lexing - the lexer breaks the line of code into tokens.
- parsing - the parser uses these tokens to generate a structure, here an AST to depict the relationship between these tokens.
- compiling - the compiler turns this AST into code objects
- interpreting - the interpreter executes each code object.

| Name        | From             | To                         |
|-------------+------------------+----------------------------|
| Parser      | source code      | abstract syntax tree [ast] |
| Compiler    | ast              | python byte code           |
| Interpreter | python byte code | execute line by line       |

* Components
functions ⇒ classes ⇒ modules ⇒ packages
