*** Line Structure
**** Encoding declarations - default =UTF-8=
#+BEGIN_SRC python
# -*- coding: <encoding-name> -*- 
#+END_SRC

**** Explicit Line Joining
#+BEGIN_SRC python
if 1900 < year < 2100 and 1 <= month <= 12 \
   and 1 <= day <= 31 and 0 <= hour < 24 \
   and 0 <= minute < 60 and 0 <= second < 60:   # Looks like a valid date
        return 1

# A line ending in a backslash cannot carry a comment.
#+END_SRC

**** Implicit Line Ending
#+BEGIN_SRC python
month_names = ['Januari', 'Februari', 'Maart',      # These are the
               'April',   'Mei',      'Juni',       # Dutch names
               'Juli',    'Augustus', 'September',  # for the months
               'Oktober', 'November', 'December']   # of the year
#+END_SRC

**** Reserved Classes of Identifiers
- =_*=
  - Not imported by =from module import *=
- =__*__=
  - System Defined Names
- =__*=
  - class-private names.

*** Literals
**** String and Bytes Literals    
#+BEGIN_SRC python
stringliteral   ::= [stringprefix](shortstring | longstring)
stringprefix    ::= "r"  | 
	            "u"  | 
		    "R"  | 
		    "U"  | 
		    "f"  | 
		    "F"  |
		    "fr" |
		    "Fr" |
		    "fR" |
		    "FR"
shortstring     ::= "'" shortstringitem* "'" | '"' shortstringitem* '"'
longstring      ::= "'''" longstringitem* "'''" | '"""' longstringitem* '"""'
shortstringitem ::=  shortstringchar | stringescapeseq
longstringitem  ::=  longstringchar | stringescapeseq
shortstringchar ::=  <any source character except "\" or newline or the quote>
longstringchar  ::=  <any source character except "\">
stringescapeseq ::=  "\" <any source character>
#+END_SRC

#+BEGIN_SRC python
bytesliteral   ::=  bytesprefix(shortbytes | longbytes)
bytesprefix    ::=  "b" | "B" | "br" | "Br" | "bR" | "BR" | "rb" | "rB" | "Rb" | "RB"
shortbytes     ::=  "'" shortbytesitem* "'" | '"' shortbytesitem* '"'
longbytes      ::=  "'''" longbytesitem* "'''" | '"""' longbytesitem* '"""'
shortbytesitem ::=  shortbyteschar | bytesescapeseq
longbytesitem  ::=  longbyteschar | bytesescapeseq
shortbyteschar ::=  <any ASCII character except "\" or newline or the quote>
longbyteschar  ::=  <any ASCII character except "\">
bytesescapeseq ::=  "\" <any ASCII character>
#+END_SRC

**** Integer Literals
#+BEGIN_SRC python
integer      ::=  decinteger | bininteger | octinteger | hexinteger
decinteger   ::=  nonzerodigit (["_"] digit)* | "0"+ (["_"] "0")*
bininteger   ::=  "0" ("b" | "B") (["_"] bindigit)+
octinteger   ::=  "0" ("o" | "O") (["_"] octdigit)+
hexinteger   ::=  "0" ("x" | "X") (["_"] hexdigit)+
nonzerodigit ::=  "1"..."9"
digit        ::=  "0"..."9"
bindigit     ::=  "0" | "1"
octdigit     ::=  "0"..."7"
hexdigit     ::=  digit | "a"..."f" | "A"..."F"
#+END_SRC
